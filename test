#!/usr/bin/env escript

main(["evo"])->
	Geno=genotype:create_NN({ffnn,sigmund,none},2,1,[]),
	Constraint={[add_neuron,add_layer_neuron],[{af,none},{plast,none}]},
	GenoM=genotype_mutator:mutate(Geno,6,Constraint),
	io:fwrite("~p~n",[GenoM]);
main(["fit"]) ->
	%Dataset="test.csv",
	Dataset="breast_cancer.csv",
	{ok,Pid}=classification:start(Dataset,fun csv:read/1,500),
	Info=classification:extract_info(Pid),
	io:fwrite("INFO: ~p~n",[Info]),
	#{mins:=Mins,maxs:=Maxs,avgs:=Avgs,encoding:=Enc}=Info,
	SensorSpec={30,[],[]},
	ActuatorSpec={2,[],[{preprocess,mostLikely,[]},{preprocess,decode,[Enc]}]},
	nn:new(contr,Pid,{ffnn,sigmund,none},{SensorSpec,ActuatorSpec,[30]}),
	io:fwrite("FITNESS: ~p~n",[nn:fit(contr,#{type=>shc,cycleShc=>100,stepnessNeuron=>50,stepnessWeight=>50,tgFit=>0.90},sync)]),
	%nn:fit(contr,#{type=>backprop,cycleBack=>1000,learning=>0,tgFit=>0.60},sync),
	Constraint=none,
	%io:fwrite("FITNESS: ~p~n",[nn:fit(contr,#{type=>eshc,mutations=>3,stepnessNeuron=>50,stepnessWeight=>50,constraint=>Constraint,cycleEshc=>10,cycleShc=>100,tgFit=>0.60},sync)]),
	%nn:fit(contr,#{type=>ashc,constraint=>{ffnn,sigmund,none},stepnessNeuron=>50,stepnessWeight=>50,cycleShc=>100,tgFit=>0.90,cycleAshc=>100},sync),
	%population:new(pop,1,{scape,init,[]},{ffnn,rectifier,hebbian},{2,1,[]}),
	%population:evolve(pop,20,Constraint,100,0.95).
	nn:fit_predict(contr).

